---------------------------------------------------------------------------------------------------------------------------------------------------------
#문제
요세푸스 문제는 다음과 같다.
1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 
한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 
원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.

N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 N과 K가 빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ K ≤ N ≤ 5,000)

출력
예제와 같이 요세푸스 순열을 출력한다.

예제 입력 1 
7 3
예제 출력 1 
<3, 6, 2, 7, 5, 1, 4>
---------------------------------------------------------------------------------------------------------------------------------------------------------
#start_time : 2021.04.23
#end_time :
---------------------------------------------------------------------------------------------------------------------------------------------------------
#배운점
---------------------------------------------------------------------------------------------------------------------------------------------------------
#내코드
#include <stdio.h>
#include <stdlib.h>

typedef struct node{
  int data;
  struct node* back;
  struct node* next;
}node;

typedef struct linkedList{
  node *head;
}linkedList;

linkedList *List;

node* Creat_Node(int data){
  node* newNode=(node*)malloc(sizeof(node));
  newNode->data=data;
  newNode->back=NULL;
  newNode->next=NULL;
  return newNode;
}

void Input(int Max){
  node *newNode=Creat_Node(1);
  List->head=newNode;
  node *p=List->head;
  for(int i=2;i<Max;i++){
    node *newNode;
    newNode=Creat_Node(i);
    newNode->back=p;
    p->next=newNode;
    p=p->next;
  }
  newNode=Creat_Node(Max);
  newNode->back=p;
  p->next=newNode;
  newNode->next=List->head;
  List->head->back=newNode;
}

void Print_List(int Max){
  node *horse;
  horse=List->head;
  for(int i=0;i<=Max;i++){
    printf("%d -> ",horse->data);
    horse=horse->next;
  }
}

int main(void) {
  List=(linkedList*)malloc(sizeof(linkedList));
  int N,Max;
  int cnt=0;
  scanf("%d %d ",&Max, &N);
  Input(Max);
  //Print_List(Max);
  node *p, *old_p;
  p=List->head->next->next;
 // old_p=p;
  printf("<%d, ",p->data);
  p->next->back=p->back;
  p->back->next=p->next;
  p=p->next->next->next;
  //free(old_p);
  for(int i=1;i<Max-1;i++){
    printf("%d, ",p->data);
    p->next->back=p->back;
    p->back->next=p->next;
    p=p->next->next->next;
    
  }
  printf("%d>",p->data);
  return 0;
}
---------------------------------------------------------------------------------------------------------------------------------------------------------
#2021.04.23
#시도1 (실패)
//삽입삭제가 유용한 원형연결리스트를 쓰면 될것 같다.
//다 만들었는데 <3, 6, 2, 7, 5, 1, 4>가 아니라 3,6,2,7,5,4,4 가 출력됐다 생각해보고 다시와서하겠다.

#시도2 (실패)
//양방향 원형 연결리스트를 만들었었고, 노드가 하나 삭제되면 뒤에노드가 다음노드를가르키는 포인터도 수정해야했는데 수정을 안했었다
//고쳤다.
