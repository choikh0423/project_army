#문제설명

큰 수를 표현할 때 자릿수를 쉽게 구분하기 위해 천단위 구분 기호인 콤마(,)를 사용한다.
어떤 수가 입력되면 천단위 구분 기호를 넣어 그 수를 다시 출력하는 프로그램을 작성하시오.

 

입력
첫째 줄에 숫자의 길이 n이 입력된다. (1≤n≤200)
둘째 줄에 길이가 n인 숫자가 입력된다.

 

출력
천단위 구분기호 콤마를 넣어 출력하시오.

 

입력 예시   
8
12421421

출력 예시
12,421,421

#start_time : 2021.03.07
#end_time : 2021.03.07

#배운점 
//숫자라고 int로만 받을생각하지말기 문자열로도 받을 생각하기. 
//int 가 4byte long이 8byte라고 배웠는데 32bit 운영체제, 윈도우운영체제에서는 둘다 4byte라고한다.
//conio.h 라이브러리는 비주얼스튜디오에서 쓸 수 있기는 하지만 리눅스운영체제에서는 못쓰는 라이브러리라고한다.
//문제는 쉬워보이는데 오답률이 높길레 풀어봤는데 뭔가 기초적인 것 여러가지 배울 수 있었던 문제였던 것 같다.
//스택을 쓰던 큐를 쓰던 상관없이 풀 수있을 것 같다. 둘 다 안써도 풀 수 있다.

#내코드

#include <stdio.h>
#include <stdlib.h>


int size;
int *STACK;
int top=-1;

void push(int data){
    if(top>=size){
        printf("오버플로우\n");
        return;
    }
    STACK[++top]=data;
    return;
}

int pop(){
    if(top<0){
        printf("아무것도 없습니다.\n");
        return -1;
    }
    return STACK[top--];
}

void print_stack(){
    if(top<0){
        printf("아무것도 없습니다.\n");
        return;
    }
    for(int i=top;i>=0;i--){
        printf("stack[%d]=%d\n",i,STACK[i]);
    }
}

int main() {
    char a[200];
    scanf("%d",&size);
    scanf("%s",a);
    //printf("%s\n",a);
    STACK=(int*)malloc(sizeof(int)*size);
    for(int i=size-1;i>=0;i--){
        push(a[i]);
    }
    //print_stack();
    for(int i=size;i>0;i--){
        printf("%d",pop()-48);
        //printf("i=%d",i);
        if(i!=1 && (i-1)%3==0)printf(",");
    }
}

#시도 1-실패
//큐가 어울린다고 생각해서 큐로 하고 무작정 12421421를 집어넣고 바로 돌려봤다.
//생각해보니까 12421421은 숫자한개라서 큐에 숫자한개만들어갔다.
//그래서 젤 첫자리 하니씩 빼서 넣는 방법으로 해봤다.(일의자리 수 하나씩 빼는 것은 이전에 풀었던 문제에서 자주해본것이라 어렵지않았다.)
//input을 8/ 12345678을 했더니 87654321이 나왔다.
//보니까 큐가 아니라 스택이 어울리는 문제였다 일의 자리가 젤처음 들어가고 젤중요한숫자가 젤끝에들어가고 젤처음 출력되야하니 lastin first out구조가맞다.

#시도 2(스택,1000자리 구분쉼표 넣음)-실패
//만약 input숫자가 int형 범위 안에 들어온다면 100점짜리 정답이다.
//하지만 범위가 200자리까지 올수있다는 것을 못봤다
//이문제는 키보드입력이 한개가 입력될때마다 넣는 방법을 써야한다.
//예전에 배운걸로는 getchar였던 것 같은데 기억이 안나니 다시 공부하겠다.
//사고다..엔터나 스페이스바 없이 한개입력만으로 바로 입력되는 함수가 있는 coino.h 라이브러리가 비주얼스튜디오에서만 쓸 수있는 라이브러리라고한다.

#시도 3-성공
//분명 내가 아는 선안에서 해결할수 있을거라 생각했다. 숫자가 들어왔다고 숫자로만 생각하지말자고 하니까 정답이보였다.
//200의크기를 가지고있는 문자열 변수 a[200]을 선언해주면 해결되는 문제였다. 200자리가 들어와도 인덱스 0부터 199까지 넣을뿐 자료형메모리 문제는 없을 것이다.
//문자형이니까 %d로 출력하려면 -48(아스키코드로 숫자 1은 49이다.)을 &c로 출력할거면 그냥하면된다.
