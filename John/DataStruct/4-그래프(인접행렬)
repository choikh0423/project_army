#start_time : 2021.03.10
#end_time :

#배운점
//공부 방향은 그래프(인접행렬)->그래프(인접리스트)->DFS(깊이우선탐색)->BFS(너비우선탐색)
//행렬을 쓸지 리스트를 쓸지는 각 문제에맞는 자료구조를 써야한다. 
//그림을 보여줄 수 있다면 무엇을 표현하고 싶은지 확실히 보여줄 수 있을텐데 아쉽다.
//인접행렬로 만든 그래프의 장점은 간단한 그래프를 표현하기에 적합하며 탐색도 비교적 쉽다.
//인접행렬로 만든 그래프의 단점은 시간복잡도 공간복잡도가 O(N^2)이므로 비효율적이다.
//무방향 무가중치 그래프에서는 각정점과의 간선이 존재하는 경우 각정점간의 인덱스 값을 1로바꾼다
//무방향 가중치 그래프에서는 각정점과의 간선이 존재하는 경우 각정점간의 인덱스 값을 가중치값으로 바꾼다.

#내코드

(_무방향 무가중치 그래프)
#include <stdio.h>
#include <stdlib.h>

int matrix[20][20];


int main(){
    int n,m;
    int x,y;
    scanf("%d %d",&n,&m);
    for(int i=0;i<m;i++){
        scanf(" %d %d",&x,&y);
        matrix[x][y]=1; //각 정점간의 간선이 존재하는 경우 0->1로 바꿔줌
        matrix[y][x]=1; //무방향이므로 반대경우도 0->1로 바꿔줌
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            printf("%2d",matrix[i][j]);
        }
        printf("\n");
    }
    
    return;
}
입력
6 8
1 2
1 3
2 3
2 4
3 4
3 5
4 5
4 6

출력
 0 1 1 0 0 0
 1 0 1 1 0 0
 1 1 0 1 1 0
 0 1 1 0 1 1
 0 0 1 1 0 0
 0 0 0 1 0 0

(_무방향 가중치 그래프_)
#include <stdio.h>
#include <stdlib.h>

int matrix[20][20];


int main(){
    int n,m;
    int x,y,z;
    scanf("%d %d",&n,&m);
    for(int i=0;i<m;i++){
        scanf(" %d %d %d",&x,&y,&z);
        matrix[x][y]=z;
        matrix[y][x]=z;
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            printf("%2d",matrix[i][j]);
        }
        printf("\n");
    }
    return;
}

입력
5 6
1 2 1
4 1 5
2 3 3
5 2 2
3 5 4
4 5 6

출력
 0 1 0 5 0
 1 0 3 0 2
 0 3 0 0 4
 5 0 0 0 6
 0 2 4 6 0
