#start time : 2021.04.05
#end time : 2021.04.06
#이진트리란?
// 각 노드가 최대 두개의 자식노드를 가지는 트리구조

#배운점
// 이진트리 구현방법(완전이진트리, 간선을 잇는방법)
// 전위 순회, 중위 순회, 후위 순회 에 대하여 배웠다. 
// 함수 젤처음에 이함수를 실행할지말지 조건을 추가하는게 깔끔하다는 것.
------------------------------------------------------------------------------------------------------------------
#출력
!전위순회!
1 -> 2 -> 4 -> 8 -> 9 -> 5 -> 10 -> 11 -> 3 -> 6 -> 12 -> 13 -> 7 -> 14 -> 15 -> 
--------------------------------------
!중위순회!
8 -> 4 -> 9 -> 2 -> 10 -> 5 -> 11 -> 1 -> 12 -> 6 -> 13 -> 3 -> 14 -> 7 -> 15 -> 
--------------------------------------
!후위순회!
8 -> 9 -> 4 -> 10 -> 11 -> 5 -> 2 -> 12 -> 13 -> 6 -> 14 -> 15 -> 7 -> 3 -> 1 -> 
------------------------------------------------------------------------------------------------------------------
#내코드
#include <stdio.h>
#include <stdlib.h>

#define Max 16

typedef struct Node{
    int data;
    struct Node* left,*right;
}Node;


void preorder(Node* node){
    if(node){
        printf("%d -> ",node->data);
        preorder(node->left);
        preorder(node->right);
    }
}

void inorder(Node* node){
    if(node){
        inorder(node->left);
        printf("%d -> ",node->data);
        inorder(node->right);
    }
}

void postorder(Node* node){
    if(node){
        postorder(node->left);
        postorder(node->right);
        printf("%d -> ",node->data);
    }
}
int main(){
    Node node[Max];
    for(int i=1;i<Max;i++){
        node[i].data=i;
        node[i].left=NULL;
        node[i].right=NULL;
    }
    for(int i=2;i<Max;i++){
        if(i%2==0)node[i/2].left=&node[i];
        else node[i/2].right=&node[i];
    }
    printf("!전위순회!\n");
    preorder(&node[1]);
    printf("\n--------------------------------------\n");
    printf("!중위순회!\n");
    inorder(&node[1]);
    printf("\n--------------------------------------\n");
    printf("!후위순회!\n");
    postorder(&node[1]);
    return 0;
}
