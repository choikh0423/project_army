문제 설명    
세종이는 이번 주말에도 정보 과학실에서 정보 올림피아드 준비를 하려고 한다.

JH 선생님은 정보 과학실 사용 조건으로 정보 올림피아드 참가 학생 명단을 작성하는 프로그램을 작성하라고 하셨다.

짖굳은 JH 선생님은 난이도를 높여 입력 데이터를 만들 때 일부러 중간에 잘못된 값을 더 많이 끼워 넣었다.

그리고 잘못된 데이터를 제거하는 방법을 설명해 주었다.

다음 조건에 따라 프로그램을 만들고 올바른 명단만 출력해 보자.

금지 키워드 : list
입력
첫째 줄에 입력 데이터의 개수 n이 입력된다. (10<=n<=20,000)

둘째 줄부터 n+1번째 줄까지 처리 코드c(문자 1자리), 수험 번호 no(1<=no<=1,000,000,000), 이름(10바이트 이내)이 입력된다.

처리 코드에 따라 입력 데이터를 메모리에 저장하거나 삭제해야 한다. 처리 코드가 'I'이면 데이터를 수험 번호 순서에 맞게 삽입한다. 만약 입력할 때 이미 수험 번호가 입력되어 있다면 같은 수험 번호의 맨 앞에 삽입한다.

처리 코드가 ‘D’이면 메모리의 해당 수험 번호의 데이터 중에서 가장 앞쪽 데이터를 찾아 삭제한다. 만약 처리 코드가 'D'이고 해당 수험 번호가 존재하지 않으면 아무 작업도 하지 않는다.

마지막으로 n+2번째 줄에 올바른 데이터의 위치를 나타내는 정수 5개가 입력된다.

출력
메모리에 저장된 데이터 중에서 올바른 데이터 위치에 있는 값의 명단을 출력한다.

입력 예시   
10
I 1011 한라산
I 999 백두산
I 999 오대산
D 999 백두산
I 800 백두산
D 500 한라산
I 900 남산
I 950 금강산
I 1205 지리산
I 700 북한산
1 2 4 5 6

출력 예시
700 북한산
800 백두산
950 금강산
999 백두산
1011 한라산

#start_time : 2021.02.28
#end_time :2021.02.28

#내코드
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct node{
    int num;
    char name[10];
    struct node *link;
}node;
typedef struct Table{
    node *Head;
}Table;
Table* Creat_Table(){
    Table *A=(Table *)malloc(sizeof(Table));
    A->Head=NULL;
    return A;
}
void Insert(Table *A, int number, char Name[]){
    //이미 Table에 number가 있다면 바로 함수에서 나간다.
    node *a=(node *)malloc(sizeof(node));
    a->num=number;
    strcpy(a->name,Name);
   if(A->Head==NULL){ //아무것도없을 때
       A->Head=a;
       a->link=NULL;
       return;
   }
   if(A->Head->num > a->num||A->Head->num==a->num){ //젤 앞에 노드 보다 작으 수가 들어왔을 때 or 젤앞에 노드랑 같은 수가 들어왔을 때
       a->link=A->Head;
       A->Head=a;
       return;
   }
   node *p=A->Head;
   while(p->link!=NULL && (p->link->num) < (a->num) ){ //자기보다 큰것과 작은 것 그 사이에 넣기위해 포인터의자리를 찾는 과정
       p=p->link;
   }
   if(p->link==NULL){ // NULL까지 와버렸으면 젤 큰수가 입력된 것으로 간주하고 젤 끝에 삽입
       a->link=NULL;
       p->link=a;
   }
   else{
       a->link=p->link;
       p->link=a;
   }
}
void Delete(Table *A,int number){
    // Table에 number가 없다면 바로 함수에서 나간다.
    node *p,*del_p; //없애는 노트를 메모리에서 완전삭제하기위해 포인터 2개.
    p=A->Head;
    if(number==A->Head->num){ //젤앞에 찾는 number가 있을경우.
        del_p=A->Head;
        A->Head=A->Head->link;
        free(del_p);
        return;
    }
    else{
        while(p->link!=NULL && p->link->num!=number){
            p=p->link;
        }
        if(p->link==NULL)return; //찾는 number가 없다.
        else{
            del_p=p->link;
            p->link=p->link->link;
            free(del_p);
        }
        return;
    }
}
void Wanted_node(Table *A,int n[]){
    int k=0;
    if(A->Head==NULL){
        printf("아무것도 없습니다.\n");
    }
    else{
        node *p=A->Head;
        for(int i=1;p!=NULL;i++){
           if(i==n[k]){//i번째 포인터가 가르킨게 n[k]랑 같다면 출력 (단, k=0부터 시작하고 한번 출력하면 k=k+1)
               printf("%d %s\n",p->num,p->name);
               k++;
           }
           p=p->link;
        }
    }
}
void Print_node(Table *A){
    //Table에서 m배열에 저장되어 있는 순번만 출력
    if(A->Head==NULL){
        printf("아무것도 없습니다.\n");
    }
    else{
        node *p=A->Head;
        while(p!=NULL){
            printf("%d %s\n",p->num,p->name);
            p=p->link;
        }
        
    }
    
}
int main() {
    Table *A;
    A=Creat_Table();
    int n,m[5];
    char c;
    int number;
    char name[10];
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf(" %c %d %s",&c,&number,name);
       // printf("입력%c %d %s\n",c,number,name);
        if(c=='I')Insert(A,number,name);
        else if(c=='D')Delete(A,number);
    }
    for(int i=0;i<5;i++){
        scanf(" %d",&m[i]);
    }
    //Print_node(A);
    //printf("\n");
    Wanted_node(A,m);
    return 0;
}

#시도1
//젤앞에 노드랑 같은 수가 들어왔을 때 앞이 아니라 뒤에 삽입되는 문제가 있었다.

#시도2(codeup제출시 오류)
//buffer overflow detected:버퍼 오버플로우, 문자열이 배열보다 긴지 확인하세요.
//아무리 봐도 모르겠다 정올-1문제랑 크기에대해 바뀐거라고는 데이터입력 개수(10<=n<=20,000),수험번호(1<=no<=1,000,000,000)뿐이라
//int형 변수가 두숫자모두 감당가능한데 왜뜨는거지..
